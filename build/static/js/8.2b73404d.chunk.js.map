{"version":3,"sources":["pages/Notice/component/ItemNotice/index.js","pages/Notice/index.js"],"names":["ImageDefault","require","ItemNotice","item","type","useState","src","mainimagelink","errored","state","setState","useEffect","id","style","width","display","span","className","onError","height","title","shortcontent","fullcontent","dateConvert","connect","common","rows","notices","count","onGetDataNotices","pageIndex","SetPageIndex","loading","SetLoading","mapDataShow","a","then","catch","renderItem","map","index","href","key","String","name","position","length","background","defaultPageSize","current","showSizeChanger","total","responsive","onChange","val"],"mappings":"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","file":"static/js/8.2b73404d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { BoxLottery } from \"components\";\r\nimport \"./style.scss\";\r\nconst ImageDefault = require(\"resources/images/img_notice.png\");\r\n\r\nconst ItemNotice = ({ item, type }) => {\r\n  const [state, setState] = useState({\r\n    src: item?.mainimagelink || ImageDefault,\r\n    errored: false,\r\n  });\r\n\r\n  //update(next img) state onMount\r\n  useEffect(() => {\r\n    setState({\r\n      src: item?.mainimagelink || ImageDefault,\r\n      errored: false,\r\n    });\r\n  }, [item]);\r\n\r\n  //update (remove) state onUnMount\r\n  useEffect(() => {\r\n    return () => {\r\n      setState({\r\n        src: null,\r\n        errored: false,\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const onError = () => {\r\n    //1st error\r\n    if (!state.errored) {\r\n      setState({\r\n        src: ImageDefault,\r\n        errored: true,\r\n      });\r\n    } else if (state.errored && state.src) {\r\n      //2nd error\r\n      //when error on fallbacksrc - remove src\r\n      setState({\r\n        src: null,\r\n        errored: true,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div id=\"item-notice\">\r\n      <BoxLottery style={{ width: \"100%\", display: \"flex\" }} span={24}>\r\n        <div className=\"item-content\">\r\n          <div className=\"top\">\r\n            <img\r\n              src={state.src}\r\n              onError={onError}\r\n              style={type !== \"DETAILS\" ? { height: 146 } : {}}\r\n            />\r\n            <h3 className=\"f-16 mt-3 mb-4 line-clamp-1\">{item?.title || \"\"}</h3>\r\n            <div className=\"txt_con pb-4\">\r\n              <span className=\"line-clamp-1 only-desktop\">\r\n                {(type !== \"DETAILS\"\r\n                  ? item?.shortcontent\r\n                  : item?.fullcontent) || \"\"}\r\n              </span>\r\n              {type !== \"DETAILS\" && (\r\n                <span className=\"only-mobile\">{item?.fullcontent || \"\"}</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom flex-center\">\r\n            <div className=\"flex-center right\">\r\n              <img src={require(\"resources/images/logo_tab.png\")} />\r\n              <span className=\"ml-2\">관리자</span>\r\n            </div>\r\n            <div className=\"left\">\r\n              <span>{item?.dateConvert || \"\"}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </BoxLottery>\r\n    </div>\r\n  );\r\n};\r\n\r\nItemNotice.propTypes = {\r\n  item: PropTypes.object,\r\n  type: PropTypes.string,\r\n};\r\nexport default ItemNotice;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Pagination, Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ItemNotice from \"./component/ItemNotice\";\r\nimport { LayoutLottery, TitleBox } from \"components\";\r\nimport \"./style.scss\";\r\n\r\nconst Notice = ({ rows, count, onGetDataNotices }) => {\r\n  const [pageIndex, SetPageIndex] = useState(1);\r\n  const [loading, SetLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    mapDataShow();\r\n  }, [pageIndex]);\r\n\r\n  const mapDataShow = async () => {\r\n    SetLoading(true);\r\n\r\n    await onGetDataNotices({ pageIndex }).then().catch();\r\n    SetLoading(false);\r\n  };\r\n  const renderItem = rows.map((item, index) => (\r\n    <a\r\n      href={`/notice/detail/${item?.id || 0}`}\r\n      className=\"__item\"\r\n      key={String(index)}\r\n    >\r\n      <ItemNotice item={item} type=\"LIST\" />\r\n    </a>\r\n  ));\r\n  return (\r\n    <LayoutLottery>\r\n      <div id=\"page-notice\" className=\" container-cst mt-5 pt-5\">\r\n        <div className=\"notice-cont\">\r\n          <TitleBox name=\"공지사항\" />\r\n          <div style={{ position: \"relative\" }}>\r\n            <div className=\"flex-center flex-wrap mt-6 group_\">\r\n              {rows.length ? (\r\n                renderItem\r\n              ) : (\r\n                <span className=\"no-data\">데이터 없음</span>\r\n              )}\r\n            </div>\r\n            <div\r\n              className={`loading flex-center spin ${\r\n                (!loading && \"__hidden-item\") || \"\"\r\n              }`}\r\n              style={{ background: \"#f4f0f02e\" }}\r\n            >\r\n              <Spin />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Pagination\r\n          className={`pt-2 pb-5 flex-center ${\r\n            (count <= 0 && \"__hidden-item\") || \"\"\r\n          }`}\r\n          defaultPageSize={6}\r\n          current={pageIndex}\r\n          showSizeChanger={false}\r\n          total={count}\r\n          responsive={true}\r\n          onChange={(val) => SetPageIndex(val)}\r\n        />\r\n      </div>\r\n    </LayoutLottery>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => {\r\n    const { common } = state;\r\n\r\n    return {\r\n      rows: common?.notices?.rows || [],\r\n      count: common?.notices?.count || 0,\r\n      // count: 20,\r\n    };\r\n  },\r\n  ({ common: { onGetDataNotices } }) => {\r\n    return { onGetDataNotices };\r\n  }\r\n)(Notice);\r\n"],"sourceRoot":""}